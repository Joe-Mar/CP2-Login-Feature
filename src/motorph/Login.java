/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package motorph;

import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author euryj
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loginHeader = new javax.swing.JLabel();
        loginPanel = new javax.swing.JPanel();
        userIDField = new javax.swing.JTextField();
        userIDLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        loginHeader.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        loginHeader.setText("MotorPH Payroll Management System");

        loginPanel.setBackground(new java.awt.Color(153, 0, 0));

        userIDField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDFieldActionPerformed(evt);
            }
        });

        userIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        userIDLabel.setText("UserID:");

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");

        loginBtn.setBackground(new java.awt.Color(0, 153, 0));
        loginBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        passwordField.setMaximumSize(new java.awt.Dimension(31, 31));
        passwordField.setMinimumSize(new java.awt.Dimension(64, 31));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userIDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginBtn)
                .addGap(321, 321, 321))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDLabel))
                .addGap(33, 33, 33)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(loginBtn)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(loginHeader)
                .addContainerGap(114, Short.MAX_VALUE))
            .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(loginHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIDFieldActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
        String userInput = userIDField.getText();
        String birthdayInput = passwordField.getText();
        boolean isUserValid = isInputValid(userInput, "userID");
        boolean isBirthdayValid = isInputValid(birthdayInput, "birthday");
        
        if(isUserValid) {
            userID = Integer.parseInt(userIDField.getText());
        }
        else {
            JOptionPane.showMessageDialog(loginPanel, "Please enter a valid employee ID");
        }
        
        if(isBirthdayValid) {
            birthday = passwordField.getText();
        }
        else {
            JOptionPane.showMessageDialog(loginPanel, "Please enter a valid birthday");
        }
        
        if(isUserValid && isBirthdayValid && isCredentialsValid()) {
            dispose();
            dashboard = new MotorPHGUI();
            dashboard.setVisible(true);
        }
    }//GEN-LAST:event_loginBtnActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed
    
    private boolean isCredentialsValid() {
      employeeList = new EmployeeModelFromFile();
      Employee[] employees = employeeList.getEmployeeModelList();
      boolean isUserFound = false;
      boolean isAdmin = false;
      String[] adminPositions = {"HR Manager", "HR Team Leader", "Payroll Manager", "Payroll Team Leader"};
      

        for (Employee emp : employees) {
            try {
                int empNo = Integer.parseInt(emp.getEmpNo());
                if (empNo == userID) {
                    isUserFound = true;
                    LocalDate inputBirthday = LocalDate.parse(birthday, formatter); 
                    LocalDate empBirthday = LocalDate.parse(emp.getBirthday(), formatter);

                    if (inputBirthday.equals(empBirthday)) {
                        
                        
                        for(String adminPosition : adminPositions) {
                            String position = emp.getPosition();
                            if(position.trim().equalsIgnoreCase(adminPosition)) {
                                isAdmin = true;
                                return true;
                            }
                        
                        }
                    }
                    else {
                        JOptionPane.showMessageDialog(loginPanel, "Birthday does not match.");
                    }
                }

            } catch (NumberFormatException e) {

    JOptionPane.showMessageDialog(loginPanel, "Invalid employee number format: " + emp.getEmpNo());
            } catch (DateTimeParseException e) {
    JOptionPane.showMessageDialog(loginPanel, "Invalid date format. Expected MM/DD/YYYY: " + emp.getBirthday());
            }
        
    }
        if (!isUserFound) {
        JOptionPane.showMessageDialog(loginPanel, "Employee ID is not found.");
    }
        else if (!isAdmin) {
        JOptionPane.showMessageDialog(loginPanel, "Employee is not an admin");
        }
       

    return false;
}
    
    
    private boolean isInputValid(String input, String fieldType) {
        if(fieldType.equalsIgnoreCase("userid")) {
            if( input.length() > 4 && input != null || !input.isEmpty()) {
                try {
                    Integer.parseInt(input);
                    return true;
                }
                catch (NumberFormatException e){
                    return false;
                }
            }
        }
        if (fieldType.equalsIgnoreCase("birthday")) {
            if( input.length() > 7 && input != null || !input.isEmpty()) {
            return true;
            }
        }
        return false;

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
    public boolean isLogin  = false;
    private int userID = 0;
    private String birthday;
    private MotorPHGUI dashboard;
    private EmployeeModelFromFile employeeList;
    private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy");


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel loginHeader;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField userIDField;
    private javax.swing.JLabel userIDLabel;
    // End of variables declaration//GEN-END:variables
}
